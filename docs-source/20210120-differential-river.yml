title: Differential River
imageSeries:
  - src: https://res.cloudinary.com/ericyd/image/upload/v1611171090/2021-01-20T13.24.37-seed-1811518835-frame-700_pitvvg.png
    srcSmall: https://res.cloudinary.com/ericyd/image/upload/c_scale,w_500/v1611171090/2021-01-20T13.24.37-seed-1811518835-frame-700_pitvvg.png
  - src: https://res.cloudinary.com/ericyd/image/upload/v1611171058/2021-01-20T13.26.59-seed-903794385-frame-500_ie2xcj.png
    srcSmall: https://res.cloudinary.com/ericyd/image/upload/c_scale,w_500/v1611171058/2021-01-20T13.26.59-seed-903794385-frame-500_ie2xcj.png
  - src: https://res.cloudinary.com/ericyd/image/upload/v1611171116/2021-01-20T12.41.31-seed-1757716594-frame-500_fe2oga.png
    srcSmall: https://res.cloudinary.com/ericyd/image/upload/c_scale,w_500/v1611171116/2021-01-20T12.41.31-seed-1757716594-frame-500_fe2oga.png
description: >
  I have been seeing examples of differential line growth around the web lately and it inspired me to play with it.
  I realized that differential line growth has a similar form to meandering river systems,
  and I wanted to see how close I could get to a convincing meandering river interpretation.
  I wasn't able to fully dial in the 'river' look I was going for, but I was happy with the result nonetheless.
  My algorithm began as a copy/paste from 
  <a href='http://www.codeplastic.com/2017/07/22/differential-line-growth-with-processing/' target='_blank'>this example on codeplastic.com</a>,
  and I was also inspired by <a href='https://inconvergent.net/generative/differential-line/' target='_blank'>this example on inconvergent.net</a>.
  I highly recommend both examples if you want to dive in deeper, or of course you can check out my source code below!
sourceCodeLink: https://github.com/ericyd/generative-art/blob/e21ce3c2f4c67ed4b1afa8d5acc840ae4ad80fba/openrndr/src/main/kotlin/sketch/S22_DifferentialGrowthRiver.kt
comments:
createdAt: 2021-01-20

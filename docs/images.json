{
  "notes": [
    "add /c_scale,w_500/ param to 'imageSrcSmall' URLs after /upload/ param"
  ],
  "images": [
    {
      "title": "Glowing graph",
      "imageSrc": "https://res.cloudinary.com/ericyd/image/upload/v1607654447/nice-2020-12-10T15.36.16-seed-1933540311_kossmk.png",
      "imageSrcSmall": "https://res.cloudinary.com/ericyd/image/upload/c_scale,w_500/v1607654447/nice-2020-12-10T15.36.16-seed-1933540311_kossmk.png",
      "description": "Using the same algorithm as before to do the circle packing, now the nodes are connected as a graph. An <em>electrified</em> graph!",
      "sourceCodeLink": "https://github.com/ericyd/generative-art/blob/5150aa37d0ef1be4168d58a5f607a98c3a190ed5/openrndr/src/main/kotlin/sketch/S18_GlowingGraph.kt",
      "comments": "",
      "createdAt": "2020-12-10"
    },
    {
      "title": "Noisy circle packing",
      "imageSrc": "https://res.cloudinary.com/ericyd/image/upload/v1607558352/2020-12-09T17.33.57-seed-205225107_wi8dac.png",
      "imageSrcSmall": "https://res.cloudinary.com/ericyd/image/upload/c_scale,w_500/v1607558352/2020-12-09T17.33.57-seed-205225107_wi8dac.png",
      "description": "Based on <a href='http://www.codeplastic.com/2017/09/09/controlled-circle-packing-with-processing/'>this post</a>. I posted a video of the animation <a href='https://www.reddit.com/r/generative/comments/ka3vaq/satisfying_conclusion_trypophobics_beware/'>on Reddit</a> if you want to see it animate - I thought it was pretty cool!",
      "sourceCodeLink": "https://github.com/ericyd/generative-art/blob/db315601967cfb13e8bc4b9fd5d60eba77641338/openrndr/src/main/kotlin/sketch/S16_NoisyCirclePack.kt",
      "comments": "",
      "createdAt": "2020-12-09"
    },
    {
      "title": "Space for my mind",
      "imageSrc": "https://res.cloudinary.com/ericyd/image/upload/v1607397402/uploader---2020-12-07T21.12.33-seed-2081555229_ko6caj.png",
      "imageSrcSmall": "https://res.cloudinary.com/ericyd/image/upload/c_scale,w_500/v1607397402/uploader---2020-12-07T21.12.33-seed-2081555229_ko6caj.png",
      "description": "'If I have space, space for my body; then I can have space, space for my mind' - Scott Pemberton Trio",
      "sourceCodeLink": "https://github.com/ericyd/generative-art/blob/230bebf16661034e59b6ab29edb304322bd62ade/openrndr/src/main/kotlin/sketch/S15_SpaceForMyMind.kt",
      "comments": "",
      "createdAt": "2020-12-07"
    },
    {
      "title": "Generative hatching with concentration gradients",
      "imageSrc": "https://res.cloudinary.com/ericyd/image/upload/v1607197826/2020-12-05T13.46.16-seed-938821407_qhxnws.png",
      "imageSrcSmall": "https://res.cloudinary.com/ericyd/image/upload/c_scale,w_500/v1607197826/2020-12-05T13.46.16-seed-938821407_qhxnws.png",
      "description": "Still aiming for the cool 3D effects shown by <a href='https://www.instagram.com/piterpasma/'>@piterpasma (instagram)</a>, but without actually using 3D. This version uses a concept of 'concentration gradients' to create the distribution of hashes. It is pretty flexible - you can either define a radial gradient or bilinear gradient to determine where the hashes are dense and where they are spread out.",
      "sourceCodeLink": "https://github.com/ericyd/generative-art/blob/1099ce9a1359d2973146b5120c4f15ba0b2776ea/openrndr/src/main/kotlin/sketch/S14_Hatching5.kt",
      "comments": "",
      "createdAt": "2020-12-05"
    },
    {
      "title": "Generative hatching v4",
      "imageSrc": "https://res.cloudinary.com/ericyd/image/upload/v1606794213/2020-11-30T16.25.44-seed-1651409604_streen.png",
      "imageSrcSmall": "https://res.cloudinary.com/ericyd/image/upload/c_scale,w_500/v1606794213/2020-11-30T16.25.44-seed-1651409604_streen.png",
      "description": "Generative hatching/cross-hatching. Heavily inspired by <a href='https://www.instagram.com/kirbyufo/'>@kirbyufo (instagram)</a> and <a href='https://www.instagram.com/piterpasma/'>@piterpasma (instagram)</a>. First, shapes are generated from some parameters. Next, hashes are added inside the shape's bounding box using <a href='https://generativeartistry.com/tutorials/circle-packing/'>circle</a> <a href='https://sighack.com/post/simple-stippling-via-circle-packing'>packing</a>. Next, <a href='https://github.com/openrndr/openrndr/blob/409f2d26e62cec27aeb227c5d5a6b1e01cd32ee8/openrndr-core/src/main/kotlin/org/openrndr/shape/CompositionDrawer.kt#L577-L582'>an OPENRNDR API</a> clips the paths against the shape itself so that only the hashes that are inside the shape are shown. (There are muliple \"clipping points\" in this image.)",
      "sourceCodeLink": "https://github.com/ericyd/generative-art/blob/58597acf254a1ae5111a087948174b72c5e47cc2/openrndr/src/main/kotlin/sketch/S13_Hatching4.kt",
      "comments": "for the imageSrcSmall, the only difference is the /c_scale,w_500/ param. Also, only the attributes above here are used, but maybe one day I'll want more",
      "createdAt": "2020-11-31"
    }
  ]
}
